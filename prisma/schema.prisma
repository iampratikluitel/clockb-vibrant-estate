generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type FooterConfigurationSocialHandles {
  facebook  String
  instagram String
  linkedin  String
  twitter   String
  whatsapp  String
  youtube   String
}

type TermsAndConditionsTerms {
  content String
  icon    String
  title   String
}

model AboutHeroSection {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model AboutModel {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  v           Int     @map("__v")
  description String
  subTitle    String?
  title       String
}

model Blogs {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  author     String
  overview   String
  postedDate DateTime @db.Date
  slug       String
  status     Boolean
  title      String
}

model BlogsCategory {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ConditionsOfUse {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  v           Int    @map("__v")
  description String
}

model Document {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model FAQ {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model FAQGuide {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model FAQs {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  addedDate  DateTime @db.Date
  answer     String
  categoryId String   @db.ObjectId
  question   String
}

model FooterConfiguration {
  id            String                           @id @default(auto()) @map("_id") @db.ObjectId
  v             Int                              @map("__v")
  about         String
  address       String
  email         String
  logo          String
  phone         String
  socialHandles FooterConfigurationSocialHandles
}

model Guide {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  buttonText  String
  buttonType  String
  createdAt   DateTime @db.Date
  description String
  fileUrl     String
  guide       String
  icon        String
  title       String
  updatedAt   DateTime @db.Date
  fileName    String?
}

model InvestmentCircle {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  description String
  logo        String
  name        String
  points      String[]
}

model InvestmentDoc {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  icon        String
  title       String
  description String
  buttonText  String
  fileUrl     String?
  createdAt   DateTime @db.Date
  updatedAt   DateTime @db.Date
}

model InvestorMainModel {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  v           Int    @map("__v")
  description String
  title       String
}

model LandingConfiguration {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model LandingSecondSection {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  v                Int    @map("__v")
  card4description String
  card4icon        String
  card4name        String
  card5description String
  card5icon        String
  card5name        String
  card6description String
  card6icon        String
  card6name        String
  card7description String
  card7icon        String
  card7name        String
}

model LandingThirdSection {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int    @map("__v")
  card10description String
  card10icon        String
  card10name        String
  card8description  String
  card8icon         String
  card8name         String
  card9description  String
  card9icon         String
  card9name         String
}

model LegalDocument {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  createdAt   DateTime @db.Date
  date        DateTime @db.Date
  description String
  fileUrl     String
  size        String
  status      String
  title       String
  type        String
  updatedAt   DateTime @db.Date
}

model NewsInsight {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model PartnerSchema {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  v           Int    @map("__v")
  description String
  logo        String
  name        String
}

model PrivacyPolicy {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  v           Int    @map("__v")
  description String
}

model ProjectJourney {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  v                Int      @map("__v")
  card1Date        String
  card1description String
  card1title       String
  card2Date        String
  card2description String
  card2title       String
  card3Date        String
  card3description String
  card3title       String
  card4Date        String
  card4description String
  card4title       String
  card5Date        String
  card5description String
  card5title       String
  date             DateTime @db.Date
}

model Report {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  date        DateTime @db.Date
  type        String
  size        String
  status      String
  category    String
  fileUrl     String?
  createdAt   DateTime @db.Date
  updatedAt   DateTime @db.Date
}

model TeamMember {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model TermsAndConditions {
  id          String                    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int                       @map("__v")
  /// Could not determine type: the field only had null or empty values in the sample set.
  description Json?
  terms       TermsAndConditionsTerms[]
}

model Testimonials {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  description String
  image       String
  name        String
  postedDate  DateTime @db.Date
  role        String
}

model UpcommingProject {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  addedDate   DateTime @db.Date
  categoryId  String   @db.ObjectId
  description String
  image       String
  overview    String
  slug        String
  status      Boolean
  title       String
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  email     String   @unique
  password  String
  status    Boolean
  userType  String
}

model appointments {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model brochureconfigurations {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model contacts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  email     String
  message   String
  name      String
  subject   String
  updatedAt DateTime @db.Date
}

model contactschames {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model faqsCategory {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  v      Int     @map("__v")
  name   String
  status Boolean
}

model keyHighlights {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model newsCategory {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  v      Int     @map("__v")
  name   String
  slug   String
  status Boolean
}

model projectCategory {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  v      Int     @map("__v")
  name   String
  slug   String
  status Boolean
}

model reports {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  category  String
  createdAt DateTime @db.Date
  date      DateTime @db.Date
  fileUrl   String?
  size      String
  status    String
  title     String
  type      String
  updatedAt DateTime @db.Date
}

model timelinemilestones {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model InvestorRelations {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  contactDetails ContactDetail[]
  events         Event[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model ContactDetail {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  type                 String
  value                String
  investorRelations    InvestorRelations @relation(fields: [investorRelationsId], references: [id], onDelete: Cascade)
  investorRelationsId  String            @db.ObjectId
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
}

model Event {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  title                String
  date                 String
  time                 String
  registrationLink     String
  investorRelations    InvestorRelations @relation(fields: [investorRelationsId], references: [id], onDelete: Cascade)
  investorRelationsId  String            @db.ObjectId
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
}

model SiteVisit {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  phone         String
  preferredDate DateTime
  message       String?
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
